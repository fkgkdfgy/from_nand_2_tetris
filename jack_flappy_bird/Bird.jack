class Bird{
    field int x,y;
    field int velo_y;
    field int acc_y;

    constructor Bird new(int _x, int _y){
        let x = _x;
        let y = _y;
        let velo_y = 0;
        do draw(x,y);

        return this;
    }

    method void updateAcc(int _acc){
        var int new_velo_y;

        let acc_y = _acc;
        let new_velo_y = velo_y + acc_y;
        do updateVelo(new_velo_y); 

        return;
    }

    method boolean isADeadBird(){
        if(y < 0)
        {
            return true;
        }
        return false;
    }

    method void updateVelo(int _velo){
        let velo_y = _velo;

        return;
    }

    method void draw(int x, int y){

        do Screen.setColor(true);
        do Screen.drawCircle(x,y,2);
        return;
    }

    method void gotoNextPlace(){
        if(~(velo_y=0))
        {
            if(y>20 & y<200)
            {
                let y = y + velo_y;
                do draw(x,y);
            }
        }

        return;
    }

    method void dispose() {
        do Memory.deAlloc(this);
        return;
    }
}