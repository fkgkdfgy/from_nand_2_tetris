<class>
    <keyword> class </keyword>
    <identifier> WoodenFish </identifier>
    <symbol> { </symbol>
    <classVarDec>
        <keyword> field </keyword>
        <keyword> int </keyword>
        <identifier> mallet_status </identifier>
        <symbol> ; </symbol>
    </classVarDec>
    <subroutineDec>
        <keyword> constructor </keyword>
        <identifier> WoodenFish </identifier>
        <identifier> new </identifier>
        <symbol> ( </symbol>
        <parameterList></parameterList>
        <symbol> ) </symbol>
        <subroutineBody>
            <symbol> { </symbol>
            <statements>
                <letStatement>
                    <keyword> let </keyword>
                    <identifier> mallet_status </identifier>
                    <symbol> = </symbol>
                    <expression>
                        <term>
                            <integerConstant> 0 </integerConstant>
                        </term>
                    </expression>
                    <symbol> ; </symbol>
                </letStatement>
                <returnStatement>
                    <keyword> return </keyword>
                    <expression>
                        <term>
                            <keyword> this </keyword>
                        </term>
                    </expression>
                    <symbol> ; </symbol>
                </returnStatement>
            </statements>
            <symbol> } </symbol>
        </subroutineBody>
    </subroutineDec>
    <subroutineDec>
        <keyword> method </keyword>
        <keyword> void </keyword>
        <identifier> start </identifier>
        <symbol> ( </symbol>
        <parameterList></parameterList>
        <symbol> ) </symbol>
        <subroutineBody>
            <symbol> { </symbol>
            <statements>
                <doStatement>
                    <keyword> do </keyword>
                    <identifier> drawWoodenFish </identifier>
                    <symbol> ( </symbol>
                    <expressionList>
                        <expression>
                            <term>
                                <integerConstant> 0 </integerConstant>
                            </term>
                        </expression>
                    </expressionList>
                    <symbol> ) </symbol>
                    <symbol> ; </symbol>
                </doStatement>
                <whileStatement>
                    <keyword> while </keyword>
                    <symbol> ( </symbol>
                    <expression>
                        <term>
                            <integerConstant> 1 </integerConstant>
                        </term>
                    </expression>
                    <symbol> ) </symbol>
                    <symbol> { </symbol>
                    <statements></statements>
                    <symbol> } </symbol>
                </whileStatement>
                <returnStatement>
                    <keyword> return </keyword>
                    <symbol> ; </symbol>
                </returnStatement>
            </statements>
            <symbol> } </symbol>
        </subroutineBody>
    </subroutineDec>
    <subroutineDec>
        <keyword> method </keyword>
        <keyword> void </keyword>
        <identifier> drawWoodenFish </identifier>
        <symbol> ( </symbol>
        <parameterList>
            <keyword> int </keyword>
            <identifier> location </identifier>
        </parameterList>
        <symbol> ) </symbol>
        <subroutineBody>
            <symbol> { </symbol>
            <varDec>
                <keyword> var </keyword>
                <keyword> int </keyword>
                <identifier> memAddress </identifier>
                <symbol> ; </symbol>
            </varDec>
            <statements>
                <letStatement>
                    <keyword> let </keyword>
                    <identifier> memAddress </identifier>
                    <symbol> = </symbol>
                    <expression>
                        <term>
                            <integerConstant> 16384 </integerConstant>
                        </term>
                        <symbol> + </symbol>
                        <term>
                            <identifier> location </identifier>
                        </term>
                    </expression>
                    <symbol> ; </symbol>
                </letStatement>
                <doStatement>
                    <keyword> do </keyword>
                    <identifier> Memory </identifier>
                    <symbol> . </symbol>
                    <identifier> poke </identifier>
                    <symbol> ( </symbol>
                    <expressionList>
                        <expression>
                            <term>
                                <identifier> memAddress </identifier>
                            </term>
                            <symbol> + </symbol>
                            <term>
                                <integerConstant> 1892 </integerConstant>
                            </term>
                        </expression>
                        <symbol> , </symbol>
                        <expression>
                            <term>
                                <symbol> - </symbol>
                                <term>
                                    <integerConstant> 32768 </integerConstant>
                                </term>
                            </term>
                        </expression>
                    </expressionList>
                    <symbol> ) </symbol>
                    <symbol> ; </symbol>
                </doStatement>
                <returnStatement>
                    <keyword> return </keyword>
                    <symbol> ; </symbol>
                </returnStatement>
            </statements>
            <symbol> } </symbol>
        </subroutineBody>
    </subroutineDec>
    <symbol> } </symbol>
</class>